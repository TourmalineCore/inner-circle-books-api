services:

  books-db:
    image: postgres:14
    container_name: books-db
    profiles: ['MockForDevelopment', 'MockForPullRequest', 'db-only']
    environment:
      POSTGRES_DB: books-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 10011:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - books-network

  books-api:
    container_name: books-api
    profiles: ['default']
    depends_on:
      books-db:
        condition: service_healthy
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 10012:80
    environment: 
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=postgres;Host=books-db;port=5432;Database=books-db
    networks:
      - books-network

  books-api-for-e2e:
    container_name: 'books-api-for-e2e'
    profiles: ['MockForPullRequest']
    extends:
      service: books-api
    environment:
      - ASPNETCORE_ENVIRONMENT=MockForPullRequest
      - ASPNETCORE_HTTP_PORTS=80
  
  books-api-for-develop:
    container_name: 'books-api-for-develop'
    profiles: ['MockForDevelopment']
    extends:
      service: books-api
    environment:
      - ASPNETCORE_ENVIRONMENT=MockForDevelopment

  mockServer:
    container_name: 'mockServer'
    profiles: ['MockForPullRequest']
    image: mockserver/mockserver:5.15.0
    command: -logLevel INFO
    ports:
      - 1080:1080
    volumes:
      - ./initializer.json:/config/initializer.json
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializer.json
    networks:
      - books-network

  pull_request_karate-tests:
  container_name: 'pull_request_karate-tests'
  profiles: ['MockForPullRequest']
  build:
    dockerfile: KarateDockerfile
    context: .
  depends_on:
    - books-api-for-e2e
    - mockServer
  command: ["karate", "/karate"]
  volumes:
    - .:/karate
  environment:
    AUTH_API_ROOT_URL: "http://mockServer:1080"
    API_ROOT_URL: "http://books-api-for-e2e"
    SHOULD_USE_FAKE_EXTERNAL_DEPENDENCIES: "true"
  networks:
    - compensations-network

networks:
  books-network: